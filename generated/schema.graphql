### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Admin {
  password: String!
  username: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Location {
  id: Int!
  latitude: Float!
  longitude: Float!
}

type Mutation {
  approveOrganization(id: Int!): OrganizationSubmission!
  createOrganization(address: String!, description: String!, email: String!, name: String!, password: String!, phone: String!, username: String!): Organization!
  createProgramme(description: String!, execution: String!, experience: Int!, expiry: String!, latitude: Float!, longitude: Float!, title: String!, volunteersRequired: Int!): Programme!
  deleteOrganization(id: Int!): Organization!
  loginAdmin(password: String!, username: String!): String!
  loginOrganization(password: String!, username: String!): String!
  submmitOrganization(address: String!, description: String!, email: String!, name: String!, phone: String!): OrganizationSubmission!
}

type Organization {
  address: String!
  description: String!
  email: String!
  id: Int!
  name: String!
  password: String!
  phone: String!
  username: String!
}

type OrganizationSubmission {
  accepted: Boolean!
  address: String!
  description: String!
  email: String!
  id: Int!
  name: String!
  phone: String!
}

type Programme {
  applicants: [Volunteer!]!
  description: String!
  execution: DateTime!
  experience: Int!
  expiry: DateTime!
  id: Int!
  location: Location
  locationId: Int!
  organization: Organization!
  organizationId: Int!
  posted: DateTime!
  title: String!
  volunteersRequired: Int!
}

type Query {
  getAllOrganizations: [Organization!]!
  getAllPendingSubmittedOrganizations: [OrganizationSubmission!]!
  getAllProgrammes: [Programme!]!
  getAllSubmittedOrganizations: [OrganizationSubmission!]!
  getProgrammeById(id: Int!): Programme!
  getSubmittedOrganizationById(id: Int!): OrganizationSubmission
}

type Volunteer {
  bloodAvaibality: Boolean!
  dob: DateTime!
  email: String!
  experience: Int!
  fname: String!
  id: Int!
  lastBloodDonated: DateTime
  lname: String!
  location: Location
  locationId: Int
  phone: String!
  username: String!
}
